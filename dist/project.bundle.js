"use strict";(self.webpackChunktodo_list=self.webpackChunktodo_list||[]).push([[242],{15:(t,e,s)=>{s.d(e,{Z:()=>n,q:()=>r});var a=s(486);function n(t){return this.name=t.trim(),this.tasks=new Array,this.taskCount=0,Object.freeze(Object.seal({getName:()=>this.name,getTasks:()=>this.tasks,getTaskCount:()=>this.taskCount,getTask:t=>{let e;return this.tasks.forEach((s=>{s.getName()!==t||(e=s)})),e},getTaskIndex:t=>this.tasks.findIndex((e=>e.getName()===t)),setTaskCount:t=>{this.taskCount=t},setName:t=>{this.name=t.trim()},setTask:(t,e)=>{const s=tasks.findIndex((e=>e.getName()===t));this.tasks[s]=e},addTask:t=>(this.tasks.forEach((e=>{if(t.getName()===e.getName())return"duplicate"})),this.tasks.push(t),this.taskCount++,!0),removeTask:t=>{let e,s=!1;return this.tasks.forEach(((n,r)=>{if(t===n.getName())return s=!0,void(e=(0,a.pullAt)(this.tasks,[r]))})),s&&this.taskCount--,s?e:"task to be removed not found"}}))}const r=t=>{let e=new Array,s=0;return Object.freeze(Object.seal({getName:()=>t.trim(),getTasks:()=>e,getTaskCount:()=>s,getTask:t=>{let s;return e.forEach((e=>{e.getName()!==t||(s=e)})),s},getTaskIndex:t=>e.findIndex((e=>e.getName()===t)),setTaskCount:t=>{s=t},setName:e=>{t=e.trim()},setTask:(t,s)=>{const a=e.findIndex((e=>e.getName()===t));e[a]=s},addTask:t=>(e.forEach((e=>{if(e.getName()===t.getName())return"duplicate"})),e.push(t),s++,!0),removeTask:t=>{let n,r=!1;return e.forEach(((s,i)=>{if(t===s.getName())return r=!0,void(n=(0,a.pullAt)(e,[i]))})),r&&s--,r?n:"task to be removed not found"}}))}}},t=>{t.O(0,[712],(()=>(15,t(t.s=15)))),t.O()}]);
//# sourceMappingURL=project.bundle.js.map